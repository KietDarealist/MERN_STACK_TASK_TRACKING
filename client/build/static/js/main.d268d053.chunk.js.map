{"version":3,"sources":["components/layout/Landing.js","reducers/authReducer.js","utils/setAuthToken.js","contexts/constants.js","contexts/AuthContext.js","components/layout/AlertMessage.js","components/auth/LoginForm.js","components/auth/RegisterForm.js","views/Auth.js","reducers/postReducer.js","contexts/PostContext.js","assets/play-btn.svg","assets/pencil.svg","assets/trash.svg","components/posts/ActionsButtons.js","components/posts/SinglePost.js","components/posts/AddPostModal.js","assets/plus-circle-fill.svg","components/posts/UpdatePostModal.js","views/DashBoard.js","assets/logo.svg","assets/logout.svg","components/layout/NavBarMenu.js","components/routing/ProtectedRoute.js","views/About.js","App.js","reportWebVitals.js","index.js"],"names":["Landing","to","authReducer","state","action","type","payload","isAuthenticated","user","authLoading","setAuthToken","token","axios","defaults","headers","common","apiUrl","LOCAL_STORAGE_TOKEN_NAME","POSTS_LOADED_SUCCESS","POSTS_LOADED_FAIL","ADD_POST","DELETE_POST","UPDATE_POST","FIND_POST","AuthContext","createContext","AuthContextProvider","children","useReducer","authState","dispatch","loadUser","a","localStorage","get","response","data","success","console","log","removeItem","useEffect","loginUser","userForm","post","setItem","accessToken","message","authContextData","registerUser","logoutUser","Provider","value","AlertMessage","info","Alert","variant","LoginForm","useContext","useState","username","password","loginForm","setLoginForm","alert","setAlert","onChangeLoginForm","event","target","name","login","preventDefault","loginData","setTimeout","Form","onSubmit","Group","Control","placeholder","required","className","onChange","Button","sizes","RegisterForm","confirmPassword","registerForm","setRegisterForm","onChangeRegisterForm","register","registerData","size","Auth","body","authRoute","Spinner","animation","postReducer","posts","postLoading","filter","_id","newPosts","map","PostContext","PostContextProvider","postState","showUpdatePostModal","setShowUpdatePostModal","showAddPostModal","setShowAddPostModal","show","showToast","setShowToast","postContextData","getPosts","addPost","newPost","deletePost","postId","delete","updatePost","updatedPost","put","findPost","find","ActionsButtons","url","href","src","playIcon","alt","width","height","onClick","bind","editIcon","deleteIcon","SinglePost","status","title","description","Card","border","Body","Title","Row","Col","Text","AddPostModal","setNewPost","onChangeNewPostForm","closeDialog","resetAddPostData","Modal","onHide","Header","closeButton","closeLabel","id","muted","as","rows","Footer","UpdatePostModal","setUpdatedPost","onChangeUpdatedPostForm","DashBoard","length","addIcon","Toast","style","position","top","right","onClose","delay","autohide","NavBarMenu","Navbar","expand","bg","Brand","learnItLlogo","Toggle","Collapse","Nav","Link","disabled","logoutIcon","ProtectedRoute","Component","component","rest","render","props","About","marginRight","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d268d053.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Landing = () => {\r\n  return <Redirect to=\"/login\"></Redirect>;\r\n};\r\n\r\nexport default Landing;\r\n","export const authReducer = (state, action) => {\r\n  const {\r\n    type,\r\n    payload: { isAuthenticated, user },\r\n  } = action;\r\n\r\n  switch (type) {\r\n    case \"SET_AUTH\":\r\n      return {\r\n        ...state,\r\n        authLoading: false,\r\n        isAuthenticated,\r\n        user,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","export const apiUrl =\r\n  process.env.NODE_ENV !== \"production\"\r\n    ? \"http://localhost:5000/api\"\r\n    : \"https://floating-crag-60344.herokuapp.com/apiUrl\";\r\n\r\nexport const LOCAL_STORAGE_TOKEN_NAME = \"learnit-mern\";\r\n\r\nexport const POSTS_LOADED_SUCCESS = \"POSTS_LOADED_SUCCESS\";\r\n\r\nexport const POSTS_LOADED_FAIL = \"POSTS_LOADED_FAIL\";\r\n\r\nexport const ADD_POST = \"ADD_POST\";\r\n\r\nexport const DELETE_POST = \"DELETE_POST\";\r\n\r\nexport const UPDATE_POST = \"UPDATE_POST\";\r\n\r\nexport const FIND_POST = \"FIND_POST\";\r\n","import { createContext, useReducer, useEffect } from \"react\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from \"./constants\";\r\nimport axios from \"axios\";\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextProvider = ({ children }) => {\r\n  const [authState, dispatch] = useReducer(authReducer, {\r\n    authLoading: true,\r\n    isAuthenticated: false,\r\n    user: null,\r\n  });\r\n\r\n  //Authenticated user\r\n  const loadUser = async () => {\r\n    if (localStorage[LOCAL_STORAGE_TOKEN_NAME]) {\r\n      setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/auth`);\r\n      if (response.data.success) {\r\n        dispatch({\r\n          type: \"SET_AUTH\",\r\n          payload: { isAuthenticated: true, user: response.data.user },\r\n        });\r\n        console.log(response.data);\r\n      }\r\n    } catch (error) {\r\n      localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n      setAuthToken(null);\r\n      dispatch({\r\n        type: \"SET_AUTH\",\r\n        payload: { isAuthenticated: false, user: null },\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => loadUser(), []);\r\n\r\n  //Login\r\n\r\n  const loginUser = async (userForm) => {\r\n    try {\r\n      const response = await axios.post(`${apiUrl}/auth/login`, userForm);\r\n      if (response.data.success) {\r\n        localStorage.setItem(\r\n          LOCAL_STORAGE_TOKEN_NAME,\r\n          response.data.accessToken\r\n        );\r\n        await loadUser();\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n      if (error.response.data) return error.response.data;\r\n      else return { success: false, message: error.message };\r\n    }\r\n  };\r\n\r\n  //Register\r\n\r\n  const registerUser = async (userForm) => {\r\n    try {\r\n      const response = await axios.post(`${apiUrl}/auth/register`, userForm);\r\n      if (response.data.success) {\r\n        localStorage.setItem(\r\n          LOCAL_STORAGE_TOKEN_NAME,\r\n          response.data.accessToken\r\n        );\r\n        await loadUser();\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n      if (error.response.data) return error.response.data;\r\n      else return { success: false, message: error.message };\r\n    }\r\n  };\r\n\r\n  //Log out\r\n\r\n  const logoutUser = () => {\r\n    localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n    dispatch({\r\n      type: \"SET_AUTH\",\r\n      payload: { isAuthenticated: false, user: null },\r\n    });\r\n  };\r\n\r\n  //Context data\r\n  const authContextData = { registerUser, loginUser, logoutUser, authState };\r\n\r\n  //Return provider\r\n  return (\r\n    <AuthContext.Provider value={authContextData}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n","import React from \"react\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nconst AlertMessage = ({ info }) => {\r\n  return info === null ? null : (\r\n    <Alert variant={info.type}>{info.message}</Alert>\r\n  );\r\n};\r\n\r\nexport default AlertMessage;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport AlertMessage from \"../layout/AlertMessage\";\r\n\r\nconst LoginForm = () => {\r\n  //Context\r\n  const { loginUser } = useContext(AuthContext);\r\n\r\n  //Local state\r\n  const [loginForm, setLoginForm] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const { username, password } = loginForm;\r\n\r\n  const onChangeLoginForm = (event) =>\r\n    setLoginForm({ ...loginForm, [event.target.name]: event.target.value });\r\n\r\n  const login = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const loginData = await loginUser(loginForm);\r\n      if (!loginData.success) {\r\n        setAlert({ type: \"danger\", message: loginData.message });\r\n        setTimeout(() => setAlert(null), 1500);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={login}>\r\n        <AlertMessage info={alert} />\r\n        <Form.Group>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            required\r\n            className=\"my-4\"\r\n            value={username}\r\n            onChange={onChangeLoginForm}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            required\r\n            value={password}\r\n            onChange={onChangeLoginForm}\r\n            className=\"my-4\"\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"success\" type=\"submit\">\r\n          Login\r\n        </Button>\r\n      </Form>\r\n      <p>Don't have an account?</p>\r\n      <Link to=\"/register\">\r\n        <Button variant=\"info\" sizes=\"sm\" className=\"ml-2\">\r\n          Register\r\n        </Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContext, useState } from \"react\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport AlertMessage from \"../layout/AlertMessage\";\r\n\r\nconst RegisterForm = () => {\r\n  // Context\r\n  const { registerUser } = useContext(AuthContext);\r\n\r\n  // Local state\r\n  const [registerForm, setRegisterForm] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const { username, password, confirmPassword } = registerForm;\r\n\r\n  const onChangeRegisterForm = (event) =>\r\n    setRegisterForm({\r\n      ...registerForm,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n\r\n  const register = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setAlert({ type: \"danger\", message: \"Passwords do not match\" });\r\n      setTimeout(() => setAlert(null), 5000);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const registerData = await registerUser(registerForm);\r\n      if (!registerData.success) {\r\n        setAlert({ type: \"danger\", message: registerData.message });\r\n        setTimeout(() => setAlert(null), 5000);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form className=\"my-4\" onSubmit={register}>\r\n        <AlertMessage info={alert} />\r\n\r\n        <Form.Group>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            required\r\n            value={username}\r\n            onChange={onChangeRegisterForm}\r\n            className=\"my-4\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            required\r\n            value={password}\r\n            onChange={onChangeRegisterForm}\r\n            className=\"my-4\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"confirmPassword\"\r\n            required\r\n            value={confirmPassword}\r\n            onChange={onChangeRegisterForm}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"success\" type=\"submit\" className=\"mt-4\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <p>Already have an account? </p>\r\n      <Link to=\"/login\">\r\n        <Button variant=\"info\" size=\"sm\" className=\"ml-4\">\r\n          Login\r\n        </Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport LoginForm from \"../components/auth/LoginForm\";\r\nimport RegisterForm from \"../components/auth/RegisterForm\";\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\nimport { useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nconst Auth = ({ authRoute }) => {\r\n  const {\r\n    authState: { authLoading, isAuthenticated },\r\n  } = useContext(AuthContext);\r\n\r\n  let body;\r\n\r\n  if (authLoading)\r\n    body = (\r\n      <div className=\"d-flex justify-content-center mt-2\">\r\n        <Spinner animation=\"border\" variant=\"info\" />\r\n      </div>\r\n    );\r\n  else if (isAuthenticated) return <Redirect to=\"/dashboard\" />;\r\n  else\r\n    body = (\r\n      <>\r\n        {authRoute === \"login\" && <LoginForm />}\r\n        {authRoute === \"register\" && <RegisterForm />}\r\n      </>\r\n    );\r\n\r\n  return (\r\n    <div className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"landing-inner\">\r\n          <h1>LearnIt</h1>\r\n          <h4>Keep track of what you are learning</h4>\r\n          {body}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import {\r\n  POSTS_LOADED_FAIL,\r\n  POSTS_LOADED_SUCCESS,\r\n  ADD_POST,\r\n  DELETE_POST,\r\n  UPDATE_POST,\r\n  FIND_POST,\r\n} from \"../contexts/constants\";\r\n\r\nexport const postReducer = (state, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case POSTS_LOADED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        postLoading: false,\r\n      };\r\n\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id != payload),\r\n      };\r\n\r\n    case POSTS_LOADED_FAIL:\r\n      return {\r\n        ...state,\r\n        posts: [],\r\n        postLoading: false,\r\n      };\r\n\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, payload],\r\n      };\r\n\r\n    case FIND_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n      };\r\n\r\n    case UPDATE_POST:\r\n      const newPosts = state.posts.map((post) =>\r\n        post._id === payload._id ? payload : post\r\n      );\r\n      return {\r\n        ...state,\r\n        posts: newPosts,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createContext, useReducer } from \"react\";\r\nimport { postReducer } from \"../reducers/postReducer\";\r\nimport {\r\n  apiUrl,\r\n  POSTS_LOADED_FAIL,\r\n  POSTS_LOADED_SUCCESS,\r\n  ADD_POST,\r\n  DELETE_POST,\r\n  UPDATE_POST,\r\n  FIND_POST,\r\n} from \"./constants\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nexport const PostContext = createContext();\r\n\r\nconst PostContextProvider = ({ children }) => {\r\n  //State\r\n  const [postState, dispatch] = useReducer(postReducer, {\r\n    post: null,\r\n    posts: [],\r\n    postLoading: true,\r\n  });\r\n\r\n  const [showUpdatePostModal, setShowUpdatePostModal] = useState(false);\r\n  const [showAddPostModal, setShowAddPostModal] = useState(false);\r\n  const [showToast, setShowToast] = useState({\r\n    show: false,\r\n    message: \"\",\r\n    type: null,\r\n  });\r\n\r\n  //Get all posts\r\n  const getPosts = async () => {\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/posts`);\r\n      if (response.data.success) {\r\n        dispatch({\r\n          type: POSTS_LOADED_SUCCESS,\r\n          payload: response.data.posts,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: POSTS_LOADED_FAIL });\r\n    }\r\n  };\r\n\r\n  //Add posts\r\n  const addPost = async (newPost) => {\r\n    try {\r\n      const response = await axios.post(`${apiUrl}/posts`, newPost);\r\n      if (response.data.success) {\r\n        dispatch({ type: ADD_POST, payload: response.data.post });\r\n        return response.data;\r\n      }\r\n    } catch (error) {\r\n      return error.response.data\r\n        ? error.response.data\r\n        : { success: false, message: \"Server Error\" };\r\n    }\r\n  };\r\n\r\n  //Delete posts\r\n  const deletePost = async (postId) => {\r\n    try {\r\n      const response = await axios.delete(`${apiUrl}/posts/${postId}`);\r\n      if (response.data.success)\r\n        dispatch({ type: DELETE_POST, payload: postId });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //Find post when user is updating post\r\n  const findPost = (postId) => {\r\n    const post = postState.posts.find((post) => post._id === postId);\r\n    dispatch({ type: FIND_POST, payload: post });\r\n  };\r\n\r\n  //Update Post\r\n  const updatePost = async (updatedPost) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `${apiUrl}/posts/${updatedPost._id}`,\r\n        updatedPost\r\n      );\r\n      if (response.data.success) {\r\n        dispatch({ type: UPDATE_POST, payload: response.data.post });\r\n        return response.data;\r\n      }\r\n    } catch (error) {\r\n      return error.response.data\r\n        ? error.response.data\r\n        : { success: false, message: \"Server Error\" };\r\n    }\r\n  };\r\n\r\n  //Post context data\r\n\r\n  const postContextData = {\r\n    postState,\r\n    getPosts,\r\n    showAddPostModal,\r\n    setShowAddPostModal,\r\n    addPost,\r\n    showToast,\r\n    setShowToast,\r\n    deletePost,\r\n    updatePost,\r\n    findPost,\r\n    showUpdatePostModal,\r\n    setShowUpdatePostModal,\r\n  };\r\n\r\n  return (\r\n    <PostContext.Provider value={postContextData}>\r\n      {children}\r\n    </PostContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PostContextProvider;\r\n","export default __webpack_public_path__ + \"static/media/play-btn.4f64bd9b.svg\";","export default __webpack_public_path__ + \"static/media/pencil.f9418d96.svg\";","export default __webpack_public_path__ + \"static/media/trash.61142061.svg\";","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport playIcon from \"../../assets/play-btn.svg\";\r\nimport editIcon from \"../../assets/pencil.svg\";\r\nimport deleteIcon from \"../../assets/trash.svg\";\r\nimport { FaPencilAlt } from \"react-icons/fa\";\r\nimport { FaYoutube } from \"react-icons/fa\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\nimport { PostContext } from \"../../contexts/PostContext\";\r\nimport { useContext } from \"react\";\r\nconst ActionsButtons = ({ url, _id }) => {\r\n  const { deletePost, findPost, setShowUpdatePostModal } =\r\n    useContext(PostContext);\r\n\r\n  const choosePost = (postId) => {\r\n    findPost(postId);\r\n    setShowUpdatePostModal(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"post-button\"\r\n        href={url}\r\n        target=\"_blank\"\r\n        variant=\"light\"\r\n      >\r\n        <img src={playIcon} alt=\"play\" width=\"32\" height=\"32\" />\r\n      </Button>\r\n      <Button\r\n        className=\"post-button\"\r\n        variant=\"light\"\r\n        onClick={choosePost.bind(this, _id)}\r\n      >\r\n        <img src={editIcon} alt=\"edit\" width=\"24\" height=\"24\" />\r\n      </Button>\r\n      <Button\r\n        className=\"post-button\"\r\n        variant=\"light\"\r\n        onClick={deletePost.bind(this, _id)}\r\n      >\r\n        <img src={deleteIcon} alt=\"delete\" width=\"24\" height=\"24\" />\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActionsButtons;\r\n","import Card from \"react-bootstrap/Card\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ActionsButtons from \"./ActionsButtons\";\r\n\r\nconst SinglePost = ({ post: { _id, status, title, description, url } }) => (\r\n  <Card\r\n    className=\"shadow\"\r\n    border={\r\n      status === \"LEARNED\"\r\n        ? \"success\"\r\n        : status === \"LEARNING\"\r\n        ? \"warning\"\r\n        : \"danger\"\r\n    }\r\n  >\r\n    <Card.Body>\r\n      <Card.Title>\r\n        <Row>\r\n          <Col>\r\n            <p className=\"post-title\">{title}</p>\r\n            <Button\r\n              variant={`${\r\n                status === \"LEARNING\"\r\n                  ? \"warning\"\r\n                  : status === \"LEARNED\"\r\n                  ? \"success\"\r\n                  : \"danger\"\r\n              }`}\r\n              className=\"my-2\"\r\n            >\r\n              {status}\r\n            </Button>\r\n          </Col>\r\n          <Col className=\"text-right\">\r\n            <ActionsButtons url={url} _id={_id} />\r\n          </Col>\r\n        </Row>\r\n      </Card.Title>\r\n      <Card.Text>{description}</Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nexport default SinglePost;\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap//Form\";\r\nimport FormCheck from \"react-bootstrap/esm/FormCheck\";\r\nimport { useContext } from \"react\";\r\nimport { PostContext } from \"../../contexts/PostContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst AddPostModal = () => {\r\n  //Context\r\n  const { showAddPostModal, setShowAddPostModal, addPost, setShowToast } =\r\n    useContext(PostContext);\r\n\r\n  //State\r\n  const [newPost, setNewPost] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    url: \"\",\r\n    status: \"TO LEARN\",\r\n  });\r\n\r\n  const { title, description, url } = newPost;\r\n\r\n  const onChangeNewPostForm = (event) => {\r\n    setNewPost({ ...newPost, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    resetAddPostData();\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { success, message } = await addPost(newPost);\r\n    resetAddPostData();\r\n    setShowToast({ show: true, message, type: success ? \"success\" : \"danger\" });\r\n  };\r\n\r\n  const resetAddPostData = () => {\r\n    setNewPost({ title: \"\", description: \"\", url: \"\", status: \"TO LEARN\" });\r\n    setShowAddPostModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal show={showAddPostModal} animation={false} onHide={closeDialog}>\r\n      <Modal.Header closeButton closeLabel=\"\">\r\n        <Modal.Title>What do you want to learn?</Modal.Title>\r\n      </Modal.Header>\r\n      <Form onSubmit={onSubmit}>\r\n        <Modal.Body>\r\n          <Form.Group>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Title\"\r\n              name=\"title\"\r\n              required\r\n              aria-describedby=\"title-help\"\r\n              value={title}\r\n              onChange={onChangeNewPostForm}\r\n            />\r\n            <Form.Text id=\"title-help\" muted>\r\n              Required\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Description\"\r\n              rows={3}\r\n              name=\"description\"\r\n              required\r\n              value={description}\r\n              onChange={onChangeNewPostForm}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Youtube Turotial URL\"\r\n              name=\"url\"\r\n              value={url}\r\n              onChange={onChangeNewPostForm}\r\n            />\r\n          </Form.Group>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"danger\" onClick={closeDialog}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"success\" type=\"submit\">\r\n            LearnIt!\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddPostModal;\r\n","export default __webpack_public_path__ + \"static/media/plus-circle-fill.a9d0f92d.svg\";","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap//Form\";\r\nimport FormCheck from \"react-bootstrap/esm/FormCheck\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { PostContext } from \"../../contexts/PostContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst UpdatePostModal = () => {\r\n  //Context\r\n  const {\r\n    postState: { post },\r\n    showUpdatePostModal,\r\n    setShowUpdatePostModal,\r\n    updatePost,\r\n    setShowToast,\r\n  } = useContext(PostContext);\r\n\r\n  //State\r\n  const [updatedPost, setUpdatedPost] = useState(post);\r\n\r\n  useEffect(() => setUpdatedPost(post), [post]);\r\n\r\n  const { title, description, url, status } = updatedPost;\r\n\r\n  const onChangeUpdatedPostForm = (event) => {\r\n    setUpdatedPost({ ...updatedPost, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setUpdatedPost(post);\r\n    setShowUpdatePostModal(false);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { success, message } = await updatePost(updatedPost);\r\n    setShowUpdatePostModal(false);\r\n    setShowToast({ show: true, message, type: success ? \"success\" : \"danger\" });\r\n  };\r\n\r\n  //   const resetAddPostData = () => {\r\n  //     setNewPost({ title: \"\", description: \"\", url: \"\", status: \"TO LEARN\" });\r\n  //     setShowAddPostModal(false);\r\n  //   };\r\n\r\n  return (\r\n    <Modal show={showUpdatePostModal} animation={false} onHide={closeDialog}>\r\n      <Modal.Header closeButton closeLabel=\"\">\r\n        <Modal.Title>Making progress?</Modal.Title>\r\n      </Modal.Header>\r\n      <Form onSubmit={onSubmit}>\r\n        <Modal.Body>\r\n          <Form.Group>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Title\"\r\n              name=\"title\"\r\n              required\r\n              aria-describedby=\"title-help\"\r\n              value={title}\r\n              onChange={onChangeUpdatedPostForm}\r\n            />\r\n            <Form.Text id=\"title-help\" muted>\r\n              Required\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              placeholder=\"Description\"\r\n              rows={3}\r\n              name=\"description\"\r\n              required\r\n              value={description}\r\n              onChange={onChangeUpdatedPostForm}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Youtube Turotial URL\"\r\n              name=\"url\"\r\n              value={url}\r\n              onChange={onChangeUpdatedPostForm}\r\n            />\r\n          </Form.Group>\r\n        </Modal.Body>\r\n\r\n        <Form.Group>\r\n          <Form.Control\r\n            as=\"select\"\r\n            value={status}\r\n            name=\"status\"\r\n            onChange={onChangeUpdatedPostForm}\r\n          >\r\n            <option value=\"TO LEARN\">TO LEARN</option>\r\n            <option value=\"LEARNING\">LEARNING</option>\r\n            <option value=\"LEARNED\">LEARNED</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"danger\" onClick={closeDialog}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"success\" type=\"submit\">\r\n            LearnIt!\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UpdatePostModal;\r\n","import React from \"react\";\r\nimport { PostContext } from \"../contexts/PostContext\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Toast from \"react-bootstrap/Toast\";\r\nimport SinglePost from \"../components/posts/SinglePost\";\r\nimport AddPostModal from \"../components/posts/AddPostModal\";\r\nimport addIcon from \"../assets/plus-circle-fill.svg\";\r\nimport OverLayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport UpdatePostModal from \"../components/posts/UpdatePostModal\";\r\n\r\nconst DashBoard = () => {\r\n  //Context\r\n  const {\r\n    postState: { post, posts, postLoading },\r\n    getPosts,\r\n    setShowAddPostModal,\r\n    showToast: { show, message, type },\r\n    setShowToast,\r\n  } = useContext(PostContext);\r\n\r\n  const {\r\n    authState: {\r\n      user: { username },\r\n    },\r\n  } = useContext(AuthContext);\r\n\r\n  //Start: Get all posts\r\n  useEffect(() => getPosts(), []);\r\n\r\n  let body = null;\r\n\r\n  if (postLoading) {\r\n    body = (\r\n      <div className=\"spinner-container\">\r\n        <Spinner animation=\"border\" variant=\"info\" />\r\n      </div>\r\n    );\r\n  } else if (posts.length === 0) {\r\n    body = (\r\n      <>\r\n        <Card className=\"text-center mx-5 my-5\">\r\n          <Card.Header as=\"h1\">Hi {username}</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>Welcom to LearnIt</Card.Title>\r\n            <Card.Text>\r\n              Click the button below to track your first skill to learn\r\n            </Card.Text>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={setShowAddPostModal.bind(this, true)}\r\n            >\r\n              Learn It\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </>\r\n    );\r\n  } else {\r\n    body = (\r\n      <>\r\n        <Row className=\"row-cols-1 row-cols-md-3 g-4 mx-auto mt-3\">\r\n          {posts.map((post) => (\r\n            <Col key={post._id} className=\"my-2\">\r\n              <SinglePost post={post} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n\r\n        {/*Open Add Post Modal*/}\r\n        {/* <OverLayTrigger\r\n          placement=\"left\"\r\n          overlay={<Tooltip>Add a new thing to learn</Tooltip>}\r\n        > */}\r\n        <Button\r\n          className=\"btn-floating\"\r\n          variant=\"none\"\r\n          onClick={setShowAddPostModal.bind(this, true)}\r\n        >\r\n          <img src={addIcon} alt=\"add-post\" width=\"60\" height=\"60\" />\r\n        </Button>\r\n        {/* </OverLayTrigger> */}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {body}\r\n      <AddPostModal />\r\n      {post !== null && <UpdatePostModal />}\r\n      {/*After post is added, show toast*/}\r\n      <Toast\r\n        show={show}\r\n        style={{ position: \"fixed\", top: \"20%\", right: \"10px\" }}\r\n        className={`bg-${type} text-white`}\r\n        onClose={setShowToast.bind(this, {\r\n          show: false,\r\n          message: \"\",\r\n          type: null,\r\n        })}\r\n        delay={3000}\r\n        autohide\r\n        animation={false}\r\n      >\r\n        <Toast.Body>\r\n          <strong>{message}</strong>\r\n        </Toast.Body>\r\n      </Toast>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashBoard;\r\n","export default __webpack_public_path__ + \"static/media/logo.d8417b80.svg\";","export default __webpack_public_path__ + \"static/media/logout.8e64276b.svg\";","import React, { useContext } from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport learnItLlogo from \"../../assets/logo.svg\";\r\nimport logoutIcon from \"../../assets/logout.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\n\r\nconst NavBarMenu = () => {\r\n  const {\r\n    authState: {\r\n      user: { username },\r\n    },\r\n    logoutUser,\r\n  } = useContext(AuthContext);\r\n\r\n  const logout = () => logoutUser();\r\n  return (\r\n    <Navbar expand=\"lg\" bg=\"success\" variant=\"dark\" className=\"shadow px-4\">\r\n      <Navbar.Brand className=\"font-weight-bolder text-white\">\r\n        <img\r\n          src={learnItLlogo}\r\n          alt=\"learnitLogo\"\r\n          width=\"32\"\r\n          height=\"32\"\r\n          className=\"mr-2\"\r\n        />\r\n        LearnIt\r\n      </Navbar.Brand>\r\n\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"between\">\r\n          <Nav.Link\r\n            className=\"font-weight-bolder text-white\"\r\n            to=\"/dashboard\"\r\n            as={Link}\r\n          >\r\n            Dashboard\r\n          </Nav.Link>\r\n          <Nav.Link\r\n            className=\"font-weight-bolder text-white\"\r\n            to=\"/about\"\r\n            as={Link}\r\n          >\r\n            About\r\n          </Nav.Link>\r\n        </Nav>\r\n\r\n        <Nav>\r\n          <Nav.Link className=\"font-weight-bolder text-white\" disabled>\r\n            Welcome {username}\r\n          </Nav.Link>\r\n          <Button\r\n            variant=\"danger\"\r\n            className=\"font-weight-bolder text-white\"\r\n            onClick={logout}\r\n          >\r\n            <img\r\n              src={logoutIcon}\r\n              alt=\"logoutIcon\"\r\n              width=\"32\"\r\n              height=\"32\"\r\n              className=\"mr-2\"\r\n            />{\" \"}\r\n            Logout\r\n          </Button>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBarMenu;\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport NavBarMenu from \"../layout/NavBarMenu\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const {\r\n    authState: { authLoading, isAuthenticated },\r\n  } = useContext(AuthContext);\r\n\r\n  if (authLoading)\r\n    return (\r\n      <div className=\"spinner-container\">\r\n        <Spinner animation=\"border\" variant=\"info\" />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated ? (\r\n          <>\r\n            <NavBarMenu />\r\n            <Component {...rest} {...props} />\r\n          </>\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Row className=\"mt-5\" style={{ marginRight: 0 }}>\r\n      <Col className=\"text-center\">\r\n        <Button\r\n          variant=\"primary\"\r\n          href=\"https://www.youtube.com/c/HenryWebDev\"\r\n          size=\"lg\"\r\n        >\r\n          See my social media networks\r\n        </Button>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Landing from \"./components/layout/Landing\";\nimport Auth from \"./views/Auth\";\nimport AuthContextProvider from \"./contexts/AuthContext\";\nimport DashBoard from \"./views/DashBoard\";\nimport ProtectedRoute from \"./components/routing/ProtectedRoute\";\nimport About from \"./views/About\";\nimport PostContextProvider from \"./contexts/PostContext\";\nfunction App() {\n  const par = 3;\n  return (\n    <AuthContextProvider>\n      <PostContextProvider>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route\n              exact\n              path=\"/login\"\n              render={(props) => <Auth {...props} authRoute=\"login\" />}\n            />\n            <Route\n              exact\n              path=\"/register\"\n              render={(props) => <Auth {...props} authRoute=\"register\" />}\n            />\n            <ProtectedRoute exact path=\"/dashboard\" component={DashBoard} />\n            <ProtectedRoute exact path=\"/about\" component={About} />\n          </Switch>\n        </Router>\n      </PostContextProvider>\n    </AuthContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}